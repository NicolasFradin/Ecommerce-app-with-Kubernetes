version: '3'

volumes:
  psqldata:

networks:
  default:
    name: ecommerce-network

services:
  db:
    image: 'postgres:latest'
    container_name: 'db'
    ports:
      - 5434:5432
    env_file:
      - .env     # path to your .env file
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'default_database'
      POSTGRES_HOSTNAME: 'localhost'
      DATABASE_PORT: '5432'
    volumes:
      - psqldata:/var/lib/postgresql
      # copy the csv datasql
      - ./data/csv/customers.csv:/docker-entrypoint-initdb.d/customers.csv
      - ./data/csv/items.csv:/docker-entrypoint-initdb.d/items.csv
      - ./data/csv/orders.csv:/docker-entrypoint-initdb.d/orders.csv
      - ./data/csv/products.csv:/docker-entrypoint-initdb.d/products.csv
      # copy the sql script to create tables
      - ./sql/create.sql:/docker-entrypoint-initdb.d/create.sql
      # copy the sql script to fill tables
      - ./sql/insert.sql:/docker-entrypoint-initdb.d/insert.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d default_database -U postgres"]
      interval: 1s
      timeout: 5s
      retries: 10

  ecommerce-app:
    build: ./src
    container_name: ecommerce-app
    ports:
      - "8000:8000"
    environment:
      - APP_SETTINGS = 'local_docker'
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./src/app:/code/app


